The Problems of B Programming Language:
The B programming language has a different importance in the history of C language. As its shortcomings made C a more robust language. 
The BCPL and B languages were employed on word-addressed machines, and the sole data type in these languages, the 'cell,' was easily equated with the hardware machine word. 
The introduction of the PDP-11 uncovered various flaws in B's semantic model. First, its character-handling techniques, which were inherited from BCPL with few changes, were cumbersome. 
Second, by specifying special operators, floating-point operations were introduced to BCPL in Multics and GCOS compilers, but the process was only conceivable because a single word on the relevant machines was large enough to represent a floating-point integer; this was not the case on the 16-bit PDP-11. 
Finally, the B and BCPL models implied overhead when dealing with pointers: the language rules caused pointers to be represented as word indices by defining a pointer as an index in an array of words. A run-time scale conversion from the pointer to the byte address anticipated by the hardware was generated for each pointer reference.

Standardization of C:
In 1983, ANSI formed the X3J11 committee to standardise the C programming language. The Accredited Standards Committee X3 (ASC X3), Information Technology, was in charge of this endeavour, which led in ANSI X3.159-1989: Programming Language C being ratified on December 14, 1989 and published in the spring of 1990. With some new additions, this original standard unified existing practises. 
The standard stated in the ANSI X3.159-1989 document was known as ANSI C at the time in the history of C language, however it was quickly superseded when ISO/IEC 9899:1990 was established as an international standard, thanks to the efforts of ISO/IEC JTC 1. While this is where the name ISO C came from, the national and international standards are now known as C89 and C90, respectively.
There have been several updates and corrigenda produced in the years since the ISO/IEC 9899 international standard was established. The current C programming language is defined by ISO/IEC 9899:2018 – Information technology – Programming languages – C, the fourth edition of the standard. C11 is the informal term given to the C language established by the 2011 edition of the standard. 
While neither this, nor the titles ANSI C and ISO C are ever expressly referenced in the standard text, their occasional usage underscores the significance of the hard work carried out by the standards community over the previous thirty years in unifying this programming language.
